apply plugin: 'maven-publish'

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

def versionName = "1.0.9"
def groupId_ = "com.ooimi.library"
def artifactId_ = "network"

afterEvaluate {
    publishing {
        //发布
        publications {
            // 创建一个名为“release”的 Maven 发布
            release(MavenPublication) {
                //应用发布版本变体的组件
                from components.release
                // 然后，您可以自定义发布的属性，如下所示。
                groupId = groupId_
                artifactId = artifactId_
                version = versionName
                artifact generateSourcesJar

                //pom配置
                pom {
                    name = '基础依赖库-网络请求'
                    description = '这是基础依赖库的网络请求模块'
                    url = 'https://github.com/yinshuai0324/AndroidLibraryX'
                    //开源协议
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    //开发者信息
                    developers {
                        developer {
                            id = 'yinshuai'
                            name = '尹帅'
                            email = '1317972280@qq.com'
                        }
                    }
                    //源码信息
                    scm {
                        connection = 'scm:git@github.com:yinshuai0324/AndroidLibraryX.git'
                        developerConnection = 'scm:git:ssh://github.com/AndroidLibraryX.git'
                        url = 'https://github.com/yinshuai0324/AndroidLibraryX.git'
                    }
                }
            }
        }
        //仓库配置
        repositories {
            // 定义一个 maven 仓库
            maven {
                // 可以有且仅有一个仓库不指定 name 属性，会隐式设置为 Maven
                // 根据 versionName 来判断仓库地址
                def releasesRepoUrl = "https://s01.oss.sonatype.org/content/repositories/releases/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = versionName.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                // 仓库用户名密码
                credentials {
                    username = readLocalProperties("maven.user.name")
                    password = readLocalProperties("maven.user.password")
                }
            }
        }

    }
}

def readLocalProperties(String name) {
    //加载资源
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
    properties.load(inputStream)
    return properties.getProperty(name)
}